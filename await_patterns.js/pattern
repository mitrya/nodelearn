const { readFile, writeFile } = require("fs").promises

const start = async () =>{
    try {
       const first = await readFile('./content/first.txt','utf8')
       await writeFile('./content/mind-grenade.txt',`this is awesome ${first}`,{flag:'a'}) 
       console.log(first)
    } catch (error) {
        console.log('error')
    }

}

start()

//using promisify
/*
const { readFile, writeFile } = require("fs")
const { promisify } = require("util")


const readFilePromise = promisify(readFile) 
const writeFilePromise =promisify(writeFile)
const start = async () =>{
    try {
       const first = await readFilePromise('./content/first.txt','utf8')
       await writeFilePromise('./content/mind-grenade.txt',`this is awesome ${first}`,{flag:'a'}) 
       console.log(first)
    } catch (error) {
        console.log('error')
    }

}

start()

*/

//using await
/*
const getText = (path)=>{
    return new Promise((resolve,reject)=>{
        readFile(path,'utf-8',
          (err,data)=>{
                if(err)
                {
                    reject(err)
                }
                else
                {
                    resolve(data)
                }
           }
        )
    })
}


const start = async () =>{
    try {
       const first = await getText('./content/first.txt')
       console.log(first)
    } catch (error) {
        console.log('error')
    }

}
start()


*/


//using promise
/*
const getText = (path)=>{
    return new Promise((resolve,reject)=>{
        readFile(path,'utf-8',
          (err,data)=>{
                if(err)
                {
                    reject(err)
                }
                else
                {
                    resolve(data)
                }
           }
        )
    })
}

getText('./content/first.txt')
.then(result=>console.log(result))
.catch(err=> console.log(err))
*/